require('dotenv').config()

const { Telegraf } = require('telegraf')
const Markup = require('telegraf/markup')
const tmdb = require('./api/Tmdb')
const movieTrailer = require('./api/MovieTrailer')
 
const bot = new Telegraf(process.env.BOT_TOKEN)

bot.start((ctx) =>  {
    ctx.reply(`–ü—Ä–∏–≤–µ—Ç, ${ctx.message.from.first_name}!\n\n–ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º!`, Markup.keyboard([['–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞']]).resize().extra())
})

// bot.help((ctx) => ctx.reply('Send me a sticker'))

bot.on('text', async (ctx) => {
    const { text } = ctx.message
    const textCapitalize = text.charAt(0).toUpperCase() + text.slice(1)

    const monthes = ['–Ø–Ω–≤–∞—Ä—è', '–§–µ–≤—Ä–∞–ª—è', '–ú–∞—Ä—Ç–∞', '–ê–ø—Ä–µ–ª—è', '–ú–∞—è', '–ò—é–Ω—è', '–ò—é–ª—è', '–ê–≤–≥—É—Å—Ç–∞', '–°–µ–Ω—Ç—è–±—Ä—è', '–û–∫—Ç—è–±—Ä—è', '–ù–æ—è–±—Ä—è', '–î–µ–∫–∞–±—Ä—è']

    if(textCapitalize === '–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞') {
        const pageId = Math.floor(Math.random() * (500 - 1 + 1)) + 1
        const movieId = Math.floor(Math.random() * (20 - 1 + 1)) + 1

        let data = {}
        let trailer = ''

        try {
            const id = await tmdb.getMovieId(process.env.TMDB_API, pageId, movieId)
            const movie = await tmdb.getDescription(process.env.TMDB_API, id)

            const { title, release_date, overview, original_title, genres, poster_path } = movie

            const newGenres = genres.map(genre => {
                return genre.name
            }).join(', ')

            const poster = `http://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`

            const releaseDate = release_date.split("-")
            const day = releaseDate[2]
            const month = monthes[parseInt(releaseDate[1] - 1)]
            const year = releaseDate[0]

            try {

                trailer = await movieTrailer.getTrailer(original_title)

            } catch(e) {
                trailer = '–¢—Ä–µ–π–ª–µ—Ä –∫ —Ñ–∏–ª—å–º—É –Ω–µ –Ω–∞–π–¥–µ–Ω!'
                console.log(e);
            }

            data = {
                title,
                original_title: original_title ? original_title : '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                overview: overview ? overview : '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                newGenres,
                release: `${day} ${month} ${year}`,
                trailer
            }

            if(trailer === '–¢—Ä–µ–π–ª–µ—Ä –∫ —Ñ–∏–ª—å–º—É –Ω–µ –Ω–∞–π–¥–µ–Ω!') {
                ctx.replyWithPhoto(poster)
            }

            const random = `üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ: ${data.title}\n\nüí° –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: ${data.overview}\n\nüéû –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${data.original_title}\n\n‚úÖ –ñ–∞–Ω—Ä: ${data.newGenres}\n\nüóì –î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞: ${data.release}\n\nüì∫ –¢—Ä–µ–π–ª–µ—Ä: ${data.trailer}`

            ctx.reply(random)

        } catch(e) {
            ctx.reply("–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º!")
            console.log(e);
        }


    }


})

bot.launch()

console.log('Bot started!');