require('dotenv').config()

const { Telegraf } = require('telegraf')
const Markup = require('telegraf/markup')
const tmdb = require('./api/Tmdb')
const movieTrailer = require('./api/MovieTrailer')
 
const bot = new Telegraf(process.env.BOT_TOKEN)

bot.start((ctx) =>  {
    ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.message.from.first_name}!\n\nü§ñ –ù–∞–∂–∏–º–∞–π –Ω–∞ –∫–Ω–æ–ø–∫—É –∏ —è –ø–æ–º–æ–≥—É —Ç–µ–±–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–∞–Ω–¥–æ–º–Ω—ã–π —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª/—Ç–≤ –ø—Ä–æ–≥—Ä–∞–º–º—É!\n\nüí¨  /help - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –∫–∞–∫ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –±–æ—Ç–æ–º`, Markup.keyboard([['–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞'], ['–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã'], ['–ü–æ–º–æ—â—å']]).resize().extra())
    console.log(`User id: ${ctx.message.from.id}\n\n User name: ${ctx.message.from.username}`)
})

bot.help((ctx) => {
    const message = `ü§ñ –Ø —É–º–Ω—ã–π –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º, —Å–µ—Ä–∏–∞–ª –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –≤–µ—á–µ—Ä.\n\nüìñ –ù–∞–∂–∏–º–∞–π –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞" –∏–ª–∏ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã", —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤ —Ä—É—á–Ω—É—é –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–∏—Å–∫–∞ –∏ —è —Å–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª/–ø—Ä–æ–≥—Ä–∞–º–º—É.\n\nüí¨ "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞" - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞\n\nüí¨ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã" - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –¢–í —à–æ—É\n\nüí¨ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞" - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –¢–í —à–æ—É(—Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω–∞ –∫–æ–º–∞–Ω–¥–µ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã")`
    ctx.reply(message)
})

bot.on('text', async (ctx) => {
    const { text } = ctx.message
    const textCapitalize = text.charAt(0).toUpperCase() + text.slice(1)

    const monthes = ['–Ø–Ω–≤–∞—Ä—è', '–§–µ–≤—Ä–∞–ª—è', '–ú–∞—Ä—Ç–∞', '–ê–ø—Ä–µ–ª—è', '–ú–∞—è', '–ò—é–Ω—è', '–ò—é–ª—è', '–ê–≤–≥—É—Å—Ç–∞', '–°–µ–Ω—Ç—è–±—Ä—è', '–û–∫—Ç—è–±—Ä—è', '–ù–æ—è–±—Ä—è', '–î–µ–∫–∞–±—Ä—è']

    const pageId = Math.floor(Math.random() * (500 - 1 + 1)) + 1
    const movieId = Math.floor(Math.random() * (20 - 1 + 1)) + 1

    let data = {}
    let trailer = ''

    if(textCapitalize === '–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞') {


        try {
            const id = await tmdb.getMovieId(process.env.TMDB_API, pageId, movieId)
            const movie = await tmdb.getDescription(process.env.TMDB_API, id)

            const { title, release_date, overview, original_title, genres, poster_path } = movie

            const newGenres = genres.map(genre => {
                return genre.name
            }).join(', ')

            const poster = `http://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`

            const releaseDate = release_date.split("-")
            const day = releaseDate[2]
            const month = monthes[parseInt(releaseDate[1] - 1)]
            const year = releaseDate[0]

            try {

                trailer = await movieTrailer.getTrailer(original_title)

            } catch(e) {
                trailer = '–¢—Ä–µ–π–ª–µ—Ä –∫ —Ñ–∏–ª—å–º—É –Ω–µ –Ω–∞–π–¥–µ–Ω!'
                console.log(e);
            }

            data = {
                title,
                original_title: original_title ? original_title : '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                overview: overview ? overview : '–û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                newGenres: newGenres ? newGenres : '–ñ–∞—Ä–Ω—ã –∫ —Ñ–∏–ª—å–º—É –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã',
                release: `${day} ${month} ${year}`,
                trailer
            }

            if(trailer === '–¢—Ä–µ–π–ª–µ—Ä –∫ —Ñ–∏–ª—å–º—É –Ω–µ –Ω–∞–π–¥–µ–Ω!') {
                ctx.replyWithPhoto(poster)
            }

            const random = `üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ: ${data.title}\n\nüí° –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: ${data.overview}\n\nüéû –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${data.original_title}\n\n‚úÖ –ñ–∞–Ω—Ä: ${data.newGenres}\n\nüóì –î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞: ${data.release}\n\nüì∫ –¢—Ä–µ–π–ª–µ—Ä: ${data.trailer}`

            ctx.reply(random)

        } catch(e) {
            ctx.reply("–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!")
            console.log(e);
        }


    }
    if(textCapitalize === '–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã' || textCapitalize === '–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞') {

        try {

            const id = await tmdb.getTvId(process.env.TMDB_API, pageId, movieId)
            const tvShow = await tmdb.getTvDescription(process.env.TMDB_API, id)

            const { name, overview, poster_path, genres, original_name, first_air_date, last_air_date } = tvShow

            const tvGenres = genres.map(genre => {
                return genre.name
            }).join(', ')

            const poster = `http://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`

            const firstAirDate = first_air_date.split('-')
            const airYear = firstAirDate[0]
            const airMonth = monthes[parseInt(firstAirDate[1] - 1)]
            const airDay = firstAirDate[2]

            const lastAirDate = last_air_date.split('-')
            const lastYear = lastAirDate[0]
            const lastMonth = monthes[parseInt(lastAirDate[1] - 1)]
            const lastDay = lastAirDate[2]


            try {
                trailer = await movieTrailer.getTrailer(original_name)
            } catch(e) {
                trailer = '–¢—Ä–µ–π–ª–µ—Ä –∫ —Å–µ—Ä–∏–∞–ª—É/–ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!'
                console.log(e);
            }

            data = {
                name,
                original_name: original_name ? original_name : '–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                overview: overview ? overview : '–û–ø–∏—Å–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ',
                tvGenres: tvGenres ? tvGenres : "–ñ–∞—Ä–Ω—ã –∫ —Å–µ—Ä–∏–∞–ª—É/–ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω—ã",
                airDate: first_air_date !== '' ? `${airDay} ${airMonth} ${airYear}` : '–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!',
                lastDate: last_air_date !== '' ? `${lastDay} ${lastMonth} ${lastYear}` : '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã –Ω–µ –Ω–∞–π–¥–Ω–æ! –í–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–µ–∫—Ç –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!',
                trailer
            }

            if(trailer === '–¢—Ä–µ–π–ª–µ—Ä –∫ —Å–µ—Ä–∏–∞–ª—É/–ø—Ä–æ–≥—Ä–∞–º–º–µ –Ω–µ –Ω–∞–π–¥–µ–Ω!') {
                ctx.replyWithPhoto(poster)
            }

            const random = `üé¨ –ù–∞–∑–≤–∞–Ω–∏–µ: ${data.name}\n\nüí° –û–ø–∏—Å–∞–Ω–∏–µ —Ñ–∏–ª—å–º–∞: ${data.overview}\n\nüéû –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: ${data.original_name}\n\n‚úÖ –ñ–∞–Ω—Ä: ${data.tvGenres}\n\nüóì –î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞: ${data.airDate}\n\nüóì –î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è: ${data.lastDate}\n\nüì∫ –¢—Ä–µ–π–ª–µ—Ä: ${data.trailer}`

            ctx.reply(random)


        } catch(e) {
            ctx.reply('–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Å–µ—Ä–∏–∞–ª! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑!')
            console.log(e);
        }

    }
    if(textCapitalize === '–ü–æ–º–æ—â—å') {
        const message = `ü§ñ –Ø —É–º–Ω—ã–π –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º, —Å–µ—Ä–∏–∞–ª –∏–ª–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É –Ω–∞ –≤–µ—á–µ—Ä.\n\nüìñ –ù–∞–∂–∏–º–∞–π –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é –∫–Ω–æ–ø–∫—É "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞" –∏–ª–∏ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã", —Ç–∞–∫–∂–µ –º–æ–∂–Ω–æ –≤ —Ä—É—á–Ω—É—é –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–∏—Å–∫–∞ –∏ —è —Å–º–æ–≥—É –ø–æ–¥–æ–±—Ä–∞—Ç—å —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª/–ø—Ä–æ–≥—Ä–∞–º–º—É.\n\nüí¨ "–ü–æ–∏—Å–∫ —Ñ–∏–ª—å–º–∞" - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ —Ñ–∏–ª—å–º–∞\n\nüí¨ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã" - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –¢–í —à–æ—É\n\nüí¨ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞" - –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∏—Å–∫–∞ –¢–í —à–æ—É(—Ä–∞–≤–Ω–æ–∑–Ω–∞—á–Ω–∞ –∫–æ–º–∞–Ω–¥–µ "–ü–æ–∏—Å–∫ —Å–µ—Ä–∏–∞–ª–∞/–ø—Ä–æ–≥—Ä–∞–º–º—ã")\n\nüí¨ /help - –ø–æ–º–æ—â—å —Ä–∞–±–æ—Ç—ã —Å –ë–æ—Ç–æ–º`
        ctx.reply(message)
    }


})

bot.launch()

console.log('Bot started!');